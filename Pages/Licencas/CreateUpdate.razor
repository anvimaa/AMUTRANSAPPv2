@page "/create-licencas"
@attribute [Authorize]

@inject AMUTRANSPORTESService service
@inject DialogService dialog
@inject NotificationService notification
@inject ApplicationServices appService

<PageTitle>Licença de Loja de Peça</PageTitle>

<RadzenTabs @bind-SelectedIndex=@selectedIndex>
    <Tabs>
        <RadzenTabsItem Text="Empresa Existente">
            <RadzenColumn>
                <RadzenAlert Shade="Shade.Lighter" Variant="Radzen.Variant.Filled" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible1">
                    Erro ao Salvar: @errorMessage...
                </RadzenAlert>

                <RadzenTemplateForm TItem="LicencaLoja" Data="@entity" Visible="@(entity != null)" Submit="@FormSubmitExist">
                    <RadzenStack>

                        <RadzenFormField Text="Empresa" Variant="Variant.Outlined">
                            <ChildContent>
                                <RadzenDropDownDataGrid Name="EmpresaId" @bind-Value=@entity.EmpresaId Data=@empresas TextProperty="Designacao" ValueProperty="Id" AllowFilteringByAllStringColumns="true">
                                    <Columns>
                                        <RadzenDropDownDataGridColumn Property="Designacao" Title="Designação" />
                                        <RadzenDropDownDataGridColumn Property="NIF" Title="NIF" />
                                    </Columns>
                                </RadzenDropDownDataGrid>
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="EmpresaId" Text="Campo Obrigatorio" Popup="false" />
                            </Helper>
                        </RadzenFormField>

                        <RadzenFormField Text="Tipo da Licença" Variant="Radzen.Variant.Flat" Style="width: 100%">
                            <ChildContent>
                                <RadzenDropDown @bind-Value=@entity.TipoLicenca Name="TipoLicenca" Data=@appService.GetLicencas() Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="TipoLicenca" Text="Campo Obrigatorio" Popup="true" />
                            </Helper>
                        </RadzenFormField>

                        <RadzenFormField Text="Local de Atividade" Variant="Radzen.Variant.Flat">
                            <ChildContent>
                                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@entity.LocalAtividade" Name="LocalAtividade" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="LocalAtividade" Text="Campo Obrigatorio" Popup="true" />
                            </Helper>
                        </RadzenFormField>

                    </RadzenStack>
                    <RadzenStack style="margin-top:1rem;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                        <RadzenButton ButtonStyle="Radzen.ButtonStyle.Success" ButtonType="ButtonType.Submit" Icon="save" Text="Salvar" Variant="Radzen.Variant.Filled" />
                        <RadzenButton ButtonStyle="Radzen.ButtonStyle.Danger" Text="Cancelar" Variant="Radzen.Variant.Filled" Click="@CancelButtonClick" Icon="cancel" />
                    </RadzenStack>
                </RadzenTemplateForm>
            </RadzenColumn>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Empresa Nova">
            <RadzenColumn SizeMD=12>
                <RadzenAlert Shade="Shade.Lighter" Variant="Radzen.Variant.Filled" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible2">
                    Erro ao Salvar: @errorMessage...
                </RadzenAlert>

                <RadzenTemplateForm TItem="Empresa" Data="@empresa" Visible="@(empresa != null)" Submit="@FormSubmitEmpresa">
                    <RadzenStack>

                        <RadzenFormField Text="Designação da Empresa" Variant="Radzen.Variant.Flat">
                            <ChildContent>
                                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@empresa.Designacao" Name="Designacao" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="Designacao" Text="Campo Obrigatorio" Popup="true" />
                            </Helper>
                        </RadzenFormField>

                        <RadzenFormField Text="NIF da Empresa" Variant="Radzen.Variant.Flat">
                            <ChildContent>
                                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@empresa.NIF" Name="NIF" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="NIF" Text="Campo Obrigatorio" Popup="true" />
                            </Helper>
                        </RadzenFormField>

                        <RadzenRow>
                            <RadzenColumn SizeMD="6">
                                <RadzenFormField Text="Responsável da Empresa" Variant="Radzen.Variant.Flat" Style="width: 100%">
                                    <ChildContent>
                                        <RadzenTextBox style="display: block; width: 100%" @bind-Value="@empresa.Responsavel" Name="Responsavel" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="Responsavel" Text="Campo Obrigatorio" Popup="true" />
                                    </Helper>
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeMD="6">
                                <RadzenFormField Text="Contacto" Variant="Radzen.Variant.Flat" Style="width: 100%">
                                    <ChildContent>
                                        <RadzenTextBox style="display: block; width: 100%" @bind-Value="@empresa.Contacto" Name="Contacto" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="Contacto" Text="Campo Obrigatorio" Popup="true" />
                                    </Helper>
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>

                        <RadzenRow>
                            <RadzenColumn SizeMD="6">
                                <RadzenFormField Text="Sede da Empresa" Variant="Radzen.Variant.Flat" Style="width: 100%">
                                    <ChildContent>
                                        <RadzenTextBox style="display: block; width: 100%" @bind-Value="@empresa.Sede" Name="Sede" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="Sede" Text="Campo Obrigatorio" Popup="true" />
                                    </Helper>
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeMD="6">
                                <RadzenFormField Text="Tipo de Licença" Variant="Radzen.Variant.Flat" Style="width: 100%">
                                    <ChildContent>
                                        <RadzenDropDown @bind-Value=@empresa.Atividade Name="Atividade" Data=@appService.GetLicencas() Style="width: 100%;" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="Atividade" Text="Campo Obrigatorio" Popup="true" />
                                    </Helper>
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>

                    </RadzenStack>
                    <RadzenStack style="margin-top:1rem;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                        <RadzenButton ButtonStyle="Radzen.ButtonStyle.Success" ButtonType="ButtonType.Submit" Icon="save" Text="Salvar" Variant="Radzen.Variant.Filled" />
                        <RadzenButton ButtonStyle="Radzen.ButtonStyle.Danger" Text="Cancelar" Variant="Radzen.Variant.Filled" Click="@CancelButtonClick" Icon="cancel" />
                    </RadzenStack>
                </RadzenTemplateForm>
            </RadzenColumn>
        </RadzenTabsItem>

    </Tabs>
</RadzenTabs>

@code {
    [Parameter]
    public int IdEntity { get; set; } = 0;

    LicencaLoja entity = new();
    IEnumerable<Empresa> empresas;

    bool errorVisible1;
    bool errorVisible2;
    string errorMessage = "";
    bool isEdit = false;
    int selectedIndex = 0;

    //empresa

    Empresa empresa = new();

    protected override async Task OnParametersSetAsync()
    {
        empresas = await service.GetEmpresas(new Query { Filter = $@"i => i.NIF.Contains(@0)", FilterParameters = new object[] { "" } });
        if (IdEntity > 0)
        {
            entity = await service.GetLicencaLojaById(IdEntity);
            isEdit = true;
        }
    }

    async Task FormSubmitExist()
    {
        try
        {
            LicencaLoja res;
            if (isEdit)
            {
                res = await service.UpdateLicencaLoja(IdEntity, entity);
                notification.Notify(NotificationSeverity.Success, "Sucesso", "Editado com sucesso!");
            }
            else
            {
                entity.DataCadastro = DateTime.Now;

                entity.DataValidade = new DateTime(DateTime.Now.Year + 1, 12, 31);
                entity.Situacao = "Em Espera";
                entity.Tipo = appService.GetLicencas().IndexOf(entity.TipoLicenca);
                entity.Valor = 26400;

                res = await service.CreateLicencaLoja(entity);
                notification.Notify(NotificationSeverity.Success, "Sucesso", "Licenciado com sucesso!");
            }
            dialog.Close(res);
        }
        catch (Exception ex)
        {
            errorVisible1 = true;
            errorMessage = ex.Message;
        }
    }

    async Task FormSubmitEmpresa()
    {
        try
        {
            Empresa res;
            if (isEdit)
            {
                res = await service.UpdateEmpresa(IdEntity, empresa);
                notification.Notify(NotificationSeverity.Success, "Sucesso", "Empresa Editado com sucesso!");
            }
            else
            {
                empresa.DataCadastro = DateTime.Now;
                res = await service.CreateEmpresa(empresa);

                LicencaLoja licencaLoja = new();

                licencaLoja.EmpresaId = res.Id;
                licencaLoja.DataCadastro = DateTime.Now;
                licencaLoja.DataValidade = new DateTime(DateTime.Now.Year + 1, 12, 31); ;
                licencaLoja.Situacao = "Em Espera";
                licencaLoja.Tipo = appService.GetLicencas().IndexOf(empresa.Atividade);
                licencaLoja.TipoLicenca = res.Atividade;
                licencaLoja.Valor = 26400;
                licencaLoja.LocalAtividade = res.Sede;

                var lic = await service.CreateLicencaLoja(licencaLoja);

                notification.Notify(NotificationSeverity.Success, "Sucesso", "Empresa Cadastrado e licenciada com sucesso!");
            }
            dialog.Close(res);
        }
        catch (Exception ex)
        {
            errorVisible2 = true;
            errorMessage = ex.Message;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        dialog.Close(null);
    }
}
